name: qt

on:
  push:
    branches:
      - master

jobs:
  window-build:
    runs-on: ubuntu-18.04

    steps:
      - name: Pull Docker Image
        run: |
          docker pull therecipe/qt:windows_64_static

      - uses: actions/setup-go@v2
        with:
          go-version: "^1.13.1"

      - uses: actions/checkout@v2

      - name: Build
        run: |
          go get -v github.com/therecipe/qt/cmd/...
          $(go env GOPATH)/bin/qtdeploy -docker build windows_64_static ./cmd/app
          cd cmd/app/deploy/windows
          zip -r app.zip ./*

      - name: Upload
        uses: actions/upload-artifact@v1
        with:
          name: windows
          path: cmd/app/deploy/windows/app.zip

  linux-build:
    runs-on: ubuntu-18.04

    steps:
      - name: Pull Docker Image
        run: |
          docker pull therecipe/qt:linux_static

      - uses: actions/setup-go@v2
        with:
          go-version: "^1.13.1"

      - uses: actions/checkout@v2

      - name: Build
        run: |
          go get -v github.com/therecipe/qt/cmd/...
          $(go env GOPATH)/bin/qtdeploy -docker build linux_static ./cmd/app
          cd cmd/app/deploy/linux
          zip -r app.zip ./*

      - name: Upload
        uses: actions/upload-artifact@v1
        with:
          name: linux
          path: cmd/app/deploy/linux/app.zip

  # darwin-build:
  #   runs-on: macos-10.15

  #   steps:
  #     - name: Install Qt
  #       uses: jurplel/install-qt-action@v2
  #       with:
  #         version: 5.13.0

  #     - uses: actions/setup-go@v2
  #       with:
  #         go-version: "^1.13.1"

  #     - uses: actions/checkout@v2

  #     - name: Install Depend
  #       run: |
  #         go get -v github.com/therecipe/qt/cmd/...
  #         go mod vendor
  #         git clone https://github.com/therecipe/env_darwin_amd64_513.git vendor/github.com/therecipe/env_darwin_amd64_513

  #     - name: Build
  #       run: |
  #         $(go env GOPATH)/bin/qtdeploy build desktop ./cmd/app
  #         cd cmd/app/deploy/darwin
  #         zip -r app.zip ./*

  #     - name: Upload
  #       uses: actions/upload-artifact@v1
  #       with:
  #         name: darwin
  #         path: cmd/app/deploy/darwin/app.zip

  create-release:
    # needs: [window-build, linux-build, darwin-build]
    needs: [window-build, linux-build]
    runs-on: ubuntu-18.04
    steps:
      - name: Download Windows
        uses: actions/download-artifact@v1
        with:
          name: windows
      
      - name: Download Linux
        uses: actions/download-artifact@v1
        with:
          name: linux

      # - name: Download Darwin
      #   uses: actions/download-artifact@v1
      #   with:
      #     name: darwin
      
      - name: Create Release
        id: create_release
        uses: monkeyWie/create-release@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: false

      - name: Upload Release windows
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./windows/app.zip
          asset_name: app-${{ steps.create_release.outputs.tag }}-windows-x64.zip
          asset_content_type: application/zip

      - name: Upload Release linux
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./linux/app.zip
          asset_name: app-${{ steps.create_release.outputs.tag }}-linux-x64.zip
          asset_content_type: application/zip
          
      # - name: Upload Release darwin
      #   uses: actions/upload-release-asset@v1.0.1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
      #     asset_path: ./darwin/app.zip
      #     asset_name: app-${{ steps.create_release.outputs.tag }}-darwin-x64.zip
      #     asset_content_type: application/zip
